basePath: /api/v1
definitions:
  domain.Tweet:
    properties:
      createdAt:
        type: string
      id:
        type: string
      text:
        type: string
      userID:
        type: string
    type: object
  http.PublishTweetRequest:
    properties:
      text:
        maxLength: 280
        type: string
    required:
    - text
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: Estefania Sack
    url: https://github.com/EstefiS/uala-challenge
  description: Esta es una API para una plataforma de microblogging similar a Twitter,
    construida con Go y Arquitectura Hexagonal.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Uala Challenge - Microblogging API
  version: "1.0"
paths:
  /timeline:
    get:
      description: Returns a list of the most recent tweets from users the current
        user follows.
      parameters:
      - description: ID of the user whose timeline is being requested
        in: header
        name: X-User-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Tweet'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Timeline
      tags:
      - Timeline
  /tweets:
    post:
      consumes:
      - application/json
      description: Allows an authenticated user to publish a new message (tweet).
      parameters:
      - description: ID of the user publishing the tweet
        in: header
        name: X-User-ID
        required: true
        type: string
      - description: Tweet content
        in: body
        name: tweet
        required: true
        schema:
          $ref: '#/definitions/http.PublishTweetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Tweet created successfully
          schema:
            $ref: '#/definitions/domain.Tweet'
        "400":
          description: Bad request (e.g., tweet too long)
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized (missing X-User-ID header)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Publish a Tweet
      tags:
      - Tweets
  /users/{id}/follow:
    post:
      description: The current user (identified by X-User-ID) starts following another
        user (identified by their ID in the URL).
      parameters:
      - description: ID of the user performing the action
        in: header
        name: X-User-ID
        required: true
        type: string
      - description: ID of the user to follow
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Follow a User
      tags:
      - Users
swagger: "2.0"
